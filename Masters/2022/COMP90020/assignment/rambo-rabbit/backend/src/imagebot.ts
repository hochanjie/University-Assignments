import { ServerToClientEvents, ClientToServerEvents } from "./ISocketInterfaces";
import { io, Socket } from "socket.io-client";

const args = process.argv.slice(2);
const socket: Socket<ServerToClientEvents, ClientToServerEvents> = io("http://localhost:" + args[0]);

let x = 0;
const colors: string[] = ["#ff4500", "#ffa800", "#ffd635", "#00a268", "#7eed56", "#2450a4", "#3690ea", "#51e9f4", "#811e9f", "#b44ac0", "#ff99aa", "#9c6926", "#000000", "#898d90", "#d4d7d9", "#ffffff"]
socket.on("connect", () => {
    console.log("Connected to localhost:" + args[0]);
    socket.emit("getState");
    /*
    setInterval(() => {
        x++;
        if (x < 10) {
            socket.emit("emitUpdate", 1, 1, "#000000");
            socket2.emit("emitUpdate", 1, 1, "#111111");
        }
    }, 1)
   setInterval(() => {
        let i = Math.floor(Math.random() * 16);
        let j = Math.floor(Math.random() * 16);
        let s = Math.round(Math.random());
        let color = colors[Math.floor(Math.random()*colors.length)];
        if (s) socket.emit("emitUpdate", i, j, color);
        else socket2.emit("emitUpdate", i, j, color);
   }, 50)
   */
});

let currState: string[][];
socket.on("emitState", (state: string[][]) => {
    currState = state;
});
socket.on("emitDelta", (x: number, y: number, color: string) => {
    currState[x][y] = color;
});


// Generate a 16x16 canvas from imageConverter.py
const mario: string[][] = [['#000000', '#000000', '#000000', '#000000', '#c12b00', '#f83800', '#f83800', '#f83800', '#f83800', '#f83800', '#ba2a00', '#8b1f00', 
'#8b1f00', '#000000', '#000000', '#000000'], ['#000000', '#000000', '#000000', '#772000', '#f83800', '#f83800', '#f83800', '#f83800', 
'#f83800', '#f83800', '#f83800', '#f83800', '#f83800', '#000000', '#000000', '#000000'], ['#000000', '#000000', '#000000', '#885c01', 
'#af7f00', '#af7f00', '#b48104', '#ffa347', '#faa042', '#b48104', '#fea146', '#000000', '#000000', '#000000', '#000000', '#000000'], ['#000000', '#000000', '#573f00', '#b48104', '#faa042', '#b38104', '#faa042', '#ffa347', '#faa042', '#b88308', '#faa042', '#ffa347', '#ffa347', '#c07a35', '#000000', '#000000'], ['#000000', '#000000', '#573f00', '#b38104', '#f59e3e', '#b48104', '#b88308', '#ffa347', '#fea246', '#f59e3e', '#b38104', '#faa042', '#faa042', '#fea246', '#000000', '#000000'], ['#000000', '#000000', '#573f00', '#af7f00', '#b48104', '#ffa347', '#ffa347', '#ffa347', '#faa042', '#af7f00', '#af7f00', '#af7f00', '#af7f00', '#000000', '#000000', '#000000'], ['#000000', '#000000', '#000000', '#000000', '#c08514', '#ffa347', '#ffa347', '#ffa347', '#ffa347', '#ffa347', '#ffa347', '#fea246', '#000000', '#000000', '#000000', '#000000'], ['#000000', '#000000', '#000000', '#886300', '#af7f00', '#b37a00', '#f33c00', '#af7f00', '#af7e00', '#b47a00', '#cd8919', '#d28e1f', '#93660d', '#000000', '#000000', '#000000'], ['#000000', '#000000', '#886300', '#af7f00', '#af7f00', '#b37a00', '#f33c00', '#b37a00', '#b77600', '#f33c00', '#af7f00', '#af7f00', '#af7f00', '#835f00', '#000000', '#000000'], ['#000000', '#000000', '#af7f00', '#af7f00', '#af7f00', '#b37a00', '#f83800', '#f83800', '#f83800', '#f33c00', '#af7f00', '#af7f00', '#af7f00', '#af7f00', '#000000', '#000000'], ['#000000', '#000000', '#ffa347', '#faa042', '#b37a00', '#f83e04', '#fe9c42', '#f83800', '#f83e04', '#fe9c42', '#f33c00', '#b48104', '#ffa347', '#ffa347', '#000000', '#000000'], ['#000000', '#000000', '#ffa347', '#fea246', '#fe963e', '#f83800', '#f83800', '#f83800', '#f83800', '#f83800', '#f83e04', '#fe9c42', '#ffa347', '#ffa347', '#000000', '#000000'], ['#000000', '#000000', '#ffa347', '#fe9b41', '#f83800', '#f83800', '#f83800', '#f83800', '#f83800', '#f83800', '#f83800', '#f83e04', '#fea146', '#ffa347', '#000000', '#000000'], ['#000000', '#000000', '#000000', '#ce6a12', '#f83800', '#f83800', '#f83800', '#000000', '#aa2600', '#f83800', '#f83800', '#f73900', '#000000', '#000000', '#000000', '#000000'], ['#000000', '#000000', '#835f00', '#af7f00', '#af7f00', '#af7e00', '#000000', '#000000', '#000000', '#954400', '#af7f00', '#af7f00', '#af7f00', '#000000', '#000000', '#000000'], ['#000000', '#000000', '#af7f00', '#af7f00', '#af7f00', '#af7f00', '#000000', '#000000', '#000000', '#573f00', '#af7f00', '#af7f00', '#af7f00', '#af7f00', '#000000', '#000000']]

const retroflower: string[][] = [['#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000'], ['#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#f88800', '#f88800', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000'], ['#000000', '#000000', '#f88800', '#000000', '#000000', '#000000', '#f88800', '#f88800', '#f88800', '#f88800', '#000000', '#000000', '#000000', '#b82800', '#000000', '#000000'], ['#000000', '#000000', '#f88800', '#f88800', '#000000', '#f88800', '#f88800', '#f88800', '#f88800', '#f88800', '#f88800', '#000000', '#f88800', '#f88800', '#000000', '#000000'], ['#000000', '#f88800', '#f88800', '#f88800', '#f88800', '#f88800', '#f88800', '#f88800', '#f88800', '#f88800', '#f88800', '#f88800', '#f88800', '#f88800', '#b82800', '#000000'], 
['#000000', '#f88800', '#f88800', '#f88800', '#000000', '#000000', '#f88800', '#f88800', '#f88800', '#000000', '#000000', '#f88800', '#f88800', '#f88800', '#b82800', '#000000'], ['#000000', '#f88800', '#f88800', '#000000', '#f88800', '#f88800', '#000000', '#f88800', '#000000', '#f88800', '#f88800', '#000000', '#f88800', '#f88800', '#b82800', '#000000'], ['#000000', '#f88800', '#f88800', '#f88800', '#f88800', '#f88800', '#f88800', '#f88800', '#f88800', '#f88800', '#f88800', '#f88800', '#f88800', '#b82800', '#b82800', '#000000'], ['#000000', '#000000', '#f88800', '#f88800', '#f88800', '#f88800', '#f88800', '#f88800', '#f88800', '#f88800', '#f88800', '#f88800', '#f88800', '#b82800', '#000000', '#000000'], ['#000000', '#000000', '#000000', '#b82800', '#f88800', '#f88800', '#f88800', '#f88800', '#f88800', '#f88800', '#b82800', '#b82800', '#b82800', '#000000', 
'#000000', '#000000'], ['#000000', '#000000', '#000000', '#000000', '#000000', '#b82800', '#b82800', '#b82800', '#b82800', '#b82800', '#b82800', '#000000', '#000000', '#000000', '#000000', '#000000'], ['#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000'], ['#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#00f800', '#00b800', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000'], ['#000000', '#000000', '#00f800', '#00f800', '#00b800', '#000000', '#000000', '#00f800', '#00b800', '#000000', '#00f800', '#00f800', '#00b800', '#000000', '#000000', '#000000'], ['#000000', '#00f800', '#00f800', '#00f800', '#00f800', '#00b800', '#000000', '#00f800', '#000000', '#00f800', '#00f800', '#00f800', '#00f800', '#00b800', '#000000', '#000000'], ['#000000', '#00b800', '#00b800', '#00b800', '#00b800', '#00b800', '#000000', '#000000', '#000000', '#00b800', '#00b800', '#00b800', '#00b800', '#00b800', '#000000', '#000000']]

const retromushroom: string[][] = [['#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000'], ['#000000', '#000000', '#000000', '#000000', '#000000', '#f8f8f8', '#f8f8f8', '#007800', '#007800', '#007800', '#007800', '#000000', '#000000', '#000000', '#000000', '#000000'], ['#000000', '#000000', '#000000', '#f8f8f8', '#f8f8f8', '#f8f8f8', '#f8f8f8', '#00b800', '#00b800', '#00b800', '#00b800', '#f8f8f8', '#f8f8f8', '#000000', '#000000', '#000000'], ['#000000', '#000000', '#f8f8f8', '#f8f8f8', '#f8f8f8', '#f8f8f8', '#00f800', '#00f800', '#00f800', '#00f800', '#00f800', '#00b800', '#f8f8f8', '#f8f8f8', '#000000', '#000000'], ['#000000', '#000000', '#f8f8f8', '#f8f8f8', '#f8f8f8', '#00f800', '#00f800', '#f8f8f8', '#f8f8f8', '#f8f8f8', '#f8f8f8', '#00f800', '#00b800', '#f8f8f8', '#000000', '#000000'], ['#000000', '#007800', '#00b800', '#00f800', '#00f800', '#00f800', '#f8f8f8', '#f8f8f8', '#f8f8f8', '#f8f8f8', '#f8f8f8', '#f8f8f8', '#00f800', '#00b800', '#007800', '#000000'], ['#000000', '#007800', '#f8f8f8', '#f8f8f8', '#00f800', 
'#00f800', '#f8f8f8', '#f8f8f8', '#f8f8f8', '#f8f8f8', '#f8f8f8', '#f8f8f8', '#00f800', '#00b800', '#007800', '#000000'], ['#000000', '#f8f8f8', '#f8f8f8', '#f8f8f8', '#f8f8f8', '#00f800', '#f8f8f8', '#f8f8f8', '#f8f8f8', '#f8f8f8', '#f8f8f8', '#f8f8f8', '#00f800', '#00b800', '#f8f8f8', '#000000'], 
['#000000', '#f8f8f8', '#f8f8f8', '#f8f8f8', '#f8f8f8', '#00b800', '#00b800', '#f8f8f8', '#f8f8f8', '#f8f8f8', '#f8f8f8', '#00b800', '#00b800', '#f8f8f8', '#f8f8f8', '#000000'], ['#000000', '#007800', '#f8f8f8', '#f8f8f8', '#007800', '#007800', '#007800', '#007800', '#007800', '#007800', '#007800', 
'#007800', '#007800', '#f8f8f8', '#f8f8f8', '#000000'], ['#000000', '#007800', '#007800', '#007800', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#007800', '#007800', '#f8f8f8', '#000000'], ['#000000', '#000000', '#000000', '#000000', '#f8f8f8', '#f8f8f8', '#000000', '#f8f8f8', '#f8f8f8', '#000000', '#f8f8f8', '#f8f8f8', '#000000', '#000000', '#000000', '#000000'], ['#000000', '#000000', '#000000', '#f8f8f8', '#f8f8f8', '#f8f8f8', '#000000', '#f8f8f8', '#f8f8f8', '#000000', '#f8f8f8', '#f8f8f8', '#f8f8f8', '#000000', '#000000', '#000000'], ['#000000', '#000000', '#000000', '#f8f8f8', '#f8f8f8', '#f8f8f8', '#f8f8f8', '#f8f8f8', '#f8f8f8', '#f8f8f8', '#f8f8f8', '#f8f8f8', '#f8f8f8', '#000000', '#000000', '#000000'], ['#000000', '#000000', '#000000', '#000000', '#f8f8f8', '#f8f8f8', '#f8f8f8', '#f8f8f8', '#f8f8f8', '#f8f8f8', '#f8f8f8', '#f8f8f8', '#000000', '#000000', '#000000', '#000000'], ['#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000']]

const purpleVoid: string[][] = new Array(16).fill("#811e9f").map(() => new Array(16).fill("#811e9f"));

function generateRandomNumber(min: number, max: number) {
    return Math.floor(min + Math.random()*(max + 1 - min));
}

// Emit update to server
let i = 0;
let j = 0;
let canvas: string[][];
switch (args[1]) {
    case "1": canvas = mario;
    break;
    case "2": canvas = retroflower;
    break;
    case "3": canvas = retromushroom;
    break;
    case "4": canvas = purpleVoid;
}
socket.on("connect", () => {

    setInterval(() => {
        const randomX = generateRandomNumber(0, 15);   
        const randomY = generateRandomNumber(0, 15);    
        if (currState && currState[randomX][randomY] != canvas[randomX][randomY]) {
            socket.emit("emitUpdate", randomX, randomY, canvas[randomX][randomY]);
        }
    }, 20)

})
