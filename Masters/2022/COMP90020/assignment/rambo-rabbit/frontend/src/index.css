/* Nesting of components
html > body > #root > .app > content > .header
                                     > .canvas > .grid > .row > .cell
                                               > .info-bar
                                               > .color-picker > .color-cell
                           > bottom-tray > .socket-controller > .connection-id 
                                                              > .server-selector
                                         > .log-table > .row | .log-table-header > .col-event
                                                                       > .col-time
                                                                       > .col-message
 */
:root {
    --pixel-size: 20px;
    --seletor-thickness: 2px;
    --color-cell-size: 30px;
    --grid-size: 16;
}

* {
    font-family: 'Courier New', Courier, monospace;
}

@keyframes flicker {
    0% {
        -webkit-filter: invert(0);
        filter: invert(0);
    }

    50% {
        -webkit-filter: invert(1);
        filter: invert(1);
    }
}

.cell {
    height: var(--pixel-size);
    width: var(--pixel-size);
}

.cell>.selector {
    animation: flicker 1s infinite;
    animation-timing-function: steps(1);
    image-rendering: pixelated;
    width: calc(var(--pixel-size) + 2 * var(--seletor-thickness));
    position: relative;
    top: calc(-1 * var(--seletor-thickness));
    left: calc(-1 * var(--seletor-thickness));
}

.color-picker {
    width: 100%;
    height: calc(var(--color-cell-size) * 2);
    display: flex;
    align-items: center;
    justify-content: center;
    flex-wrap: wrap;
    flex-direction: row;
}

.canvas,
.canvas-top,
.canvas-bot,
.canvas-mid {
    display: flex;
    flex-direction: column;
}

.canvas-top {
    height: 15px;
    margin-bottom: 10px;
    justify-content: flex-end;
}

.canvas-bot {
    margin-top: 20px;
    justify-content: flex-start;
}

@font-face {
    font-family: 'PublicPixelFont';
    src: local('PublicPixelFont'), url(./PublicPixelFont.ttf) format('truetype');
}

.grid {
    overflow: hidden;
    align-self: center;
}

.grid:first-child {
    padding-top: var(--seletor-thickness);
}

.grid:last-child {
    padding-bottom: var(--seletor-thickness);
}

.row {
    padding-left: var(--seletor-thickness);
    padding-right: var(--seletor-thickness);
    display: flex;
}

/* Grows to 100% of the parent or overflow to match the content */
html,
body,
#root,
.app {
    min-width: calc(var(--pixel-size) * var(--grid-size));
    width: 100vw;
    height: 100%;
    min-height: 100%;
    margin: 0;
    overflow-x: hidden;
}

.content {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100vw;
    flex-direction: column;
}

.app {
    background-color: beige;
}

.info-bar {
    align-self: center;
    display: flex;
    font-family: 'PublicPixelFont';
    font-size: xx-small;
    padding: 5px 10px 5px 10px;
    background-color: white;
    width: max-content;
    border-radius: 10px;
    text-align: center;
}

.log-table {
    height: 25vh;
    width: 100vw;
    overflow: auto;
}

.log-table>.row {
    display: flex;
}

.log-table-header {
    display: flex;
}

.header {
    display: 'flex';
    font-family: 'PublicPixelFont';
    padding: 20px 20px 20px 20px;
    align-items: center;
    justify-content: center;
    font-size: large;
}

.col-message {
    flex: 1 1;
}

.col-event {
    flex: 0 0 200px;
    background-color: aliceblue;
}

.col-time {
    flex: 0 0 100px;
}

.bottom-tray {
    background-color: white;
    position: absolute;
    bottom: 0px;
    width: 100%;
    display: flex;
    justify-content: center;
    flex-flow: column;
    font-size: small;
}

.dev-button-toggle {
    text-align: center;
    font-size: 10px;
}

/* only enable hover effect when on computer */
@media (hover) {
    .dev-button-toggle:hover {
        background-color: grey;
        cursor: pointer;
    }

    .cell:hover {
        box-shadow: 1px 1px 0 black inset, -1px -1px 0 black inset;
    }

    .cell:hover,
    .color-cell:hover {
        cursor: pointer;
    }
}